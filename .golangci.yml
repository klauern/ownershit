linters-settings:
  depguard:
    list-type: blacklist
    packages:
      # logging is allowed only by logutils.Log, logrus
      # is allowed to use only in logutils package
      - github.com/sirupsen/logrus
    packages-with-error-message:
      - github.com/sirupsen/logrus: "logging is allowed only by logutils.Log"
  dupl:
    threshold: 100
  exhaustive:
    default-signifies-exhaustive: false
  funlen:
    lines: 100
    statements: 50
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  gocyclo:
    min-complexity: 15
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  golint:
    min-confidence: 0
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return
  govet:
    check-shadowing: true

  lll:
    line-length: 140
  maligned:
    suggest-new: true
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - bodyclose
    - deadcode
    - depguard
    - dogsled
    - dupl
    - errcheck
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - golint
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - interfacer
    - lll
    - misspell
    - nakedret
    - nolintlint
    - rowserrcheck
    - staticcheck
    - structcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - whitespace
    - exportloopref
    - gomodguard
    - goerr113

    # Disabled by your configuration linters:
    # - asciicheck: Simple linter to check that your code does not contain non-ASCII identifiers [fast: true, auto-fix: false]
    # - exhaustive: check exhaustiveness of enum switch statements [fast: true, auto-fix: false]
    # - gochecknoglobals: Checks that no globals are present in Go code [fast: true, auto-fix: false]
    # - gocognit: Computes and checks the cognitive complexity of functions [fast: true, auto-fix: false]
    # - godot: Check if comments end in a period [fast: true, auto-fix: true]
    # - godox: Tool for detection of FIXME, TODO and other comment keywords [fast: true, auto-fix: false]
    # - gofumpt: Gofumpt checks whether code was gofumpt-ed. [fast: true, auto-fix: false]
    # - maligned: Tool to detect Go structs that would take less memory if their fields were sorted [fast: true, auto-fix: false]
    # - nestif: Reports deeply nested if statements [fast: true, auto-fix: false]
    # - noctx: noctx finds sending http request without context.Context [fast: true, auto-fix: false]
    # - prealloc: Finds slice declarations that could potentially be preallocated [fast: true, auto-fix: false]
    # - scopelint: Scopelint checks for unpinned variables in go programs [fast: true, auto-fix: false]
    # - testpackage: linter that makes you use a separate _test package [fast: true, auto-fix: false]
    # - wsl: Whitespace Linter - Forces you to use empty lines! [fast: true, auto-fix: false]

issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - gomnd

    # https://github.com/go-critic/go-critic/issues/926
    - linters:
        - gocritic
      text: "unnecessaryDefer:"

run:
  skip-dirs:
    - mocks

# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.27.x # use the fixed version to not introduce new linters unexpectedly
  prepare:
