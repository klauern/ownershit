---
description: "CLI command structure and urfave/cli v2 patterns"
globs: "cmd/**/*.go"
---

# CLI Command Structure

## Framework

- Uses `github.com/urfave/cli/v2` for CLI framework
- Main entry point: [cmd/ownershit/main.go](mdc:cmd/ownershit/main.go)

## Available Commands

### Core Commands

- `init` - Create stub configuration file
- `sync` - Synchronize repository settings (main command)
- `branches` - Update branch merge strategies only
- `label` - Sync default labels across repositories
- `ratelimit` - Check GitHub API rate limits
- `import` - Import existing repository configurations

### Archive Commands

- `archive query` - Find inactive repositories
- `archive execute` - Archive repositories based on query results
- Implementation: [cmd/archiving.go](mdc:cmd/archiving.go)

### Future Commands

- `validate` - Validate and migrate configuration files (task-28)

## Global Flags

- `--config` (default: `repositories.yaml`) - Path to configuration file
- `--debug/-d` - Enable debug logging
- Alternative: Set `OWNERSHIT_DEBUG` environment variable

## Command Implementation Pattern

```go
&cli.Command{
    Name:  "command-name",
    Usage: "Brief description",
    Flags: []cli.Flag{
        &cli.StringFlag{
            Name:    "flag-name",
            Usage:   "Flag description",
            EnvVars: []string{"ENV_VAR_NAME"},
        },
    },
    Action: func(c *cli.Context) error {
        // Command implementation
        return nil
    },
}
```

## Error Handling

- Commands should return errors, not panic
- Use structured logging with zerolog
- Provide helpful error messages to users

## Testing

- Unit tests: [cmd/ownershit/main_test.go](mdc:cmd/ownershit/main_test.go)
- Integration tests: [cmd/ownershit/integration_test.go](mdc:cmd/ownershit/integration_test.go)
- E2E tests: [cmd/ownershit/e2e_cli_test.go](mdc:cmd/ownershit/e2e_cli_test.go)

## Configuration

- Default config file: `repositories.yaml`
- Example: [example-repositories.yaml](mdc:example-repositories.yaml)
- Config structure: [config.go](mdc:config.go)
