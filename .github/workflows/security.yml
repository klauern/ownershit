name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  govulncheck:
    name: Go Vulnerability Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version-file: 'go.mod'
        cache: true

    - name: Install Task
      run: go install github.com/go-task/task/v3/cmd/task@latest

    - name: Install govulncheck
      run: go install golang.org/x/vuln/cmd/govulncheck@latest

    - name: Run vulnerability check
      run: task security
      continue-on-error: true
      id: govulncheck

    - name: Upload vulnerability results
      if: always()
      run: |
        echo "Vulnerability scan completed. Check logs for details."
        if [ "${{ steps.govulncheck.outcome }}" = "failure" ]; then
          echo "::warning::Vulnerabilities found. Please review the scan results."
        fi

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read
    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: ${{ matrix.language }}
        queries: security-extended,security-and-quality

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version-file: 'go.mod'
        cache: true

    - name: Install Task
      run: go install github.com/go-task/task/v3/cmd/task@latest

    - name: Build project
      run: task build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{matrix.language}}"

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
        allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, MPL-2.0

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [govulncheck, codeql]
    if: always()
    steps:
    - name: Security scan summary
      run: |
        echo "## Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "- **Go Vulnerability Check**: ${{ needs.govulncheck.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **CodeQL Analysis**: ${{ needs.codeql.result }}" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ needs.govulncheck.result }}" == "failure" || "${{ needs.codeql.result }}" == "failure" ]]; then
          echo "::warning::Some security checks failed. Please review the results."
          echo "- :warning: **Action Required**: Review security scan failures above" >> $GITHUB_STEP_SUMMARY
        else
          echo "- :white_check_mark: **All security checks passed**" >> $GITHUB_STEP_SUMMARY
        fi